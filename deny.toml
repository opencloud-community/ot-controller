# SPDX-FileCopyrightText: OpenTalk GmbH <mail@opentalk.eu>
#
# SPDX-License-Identifier: EUPL-1.2

[graph]
# If 1 or more target triples (and optionally, target_features) are specified,
# only the specified targets will be checked when running `cargo deny check`.
# This means, if a particular package is only ever used as a target specific
# dependency, such as, for example, the `nix` crate only being used via the
# `target_family = "unix"` configuration, that only having windows targets in
# this list would mean the nix crate, as well as any of its exclusive
# dependencies not shared by any other crates, would be ignored, as the target
# list here is effectively saying which targets you are building for.
targets = [
  { triple = "x86_64-unknown-linux-gnu" },
  { triple = "x86_64-unknown-linux-musl" },
]

# This section is considered when running `cargo deny check advisories`
# More documentation for the advisories section can be found here:
# https://embarkstudios.github.io/cargo-deny/checks/advisories/cfg.html
[advisories]
version = 2
# The url(s) of the advisory databases to use
db-urls = ["https://github.com/rustsec/advisory-db"]
# The lint level for crates that have been yanked from their source registry
yanked = "deny"
# A list of advisory IDs to ignore. Note that ignored advisories will still
# output a note when they are encountered.
ignore = [
  # Marvin Attack: potential key recovery through timing sidechannels
  # in `rsa 0.9.3`.
  # Solution: No safe upgrade is available!
  #
  # This library is used as a dependency of `openidconnect 3.4.0`, so unless we
  # want to replace that no further action is available until either:
  # - openidconnect switches to a different dependency
  # - rsa releases a fixed version
  "RUSTSEC-2023-0071",
  { crate = "bytes@1.6.0", reason = "no complications are expected, will be fixed in the next release" },
]
# Threshold for security vulnerabilities, any vulnerability with a CVSS score
# lower than the range specified will be ignored. Note that ignored advisories
# will still output a note when they are encountered.
# * None - CVSS Score 0.0
# * Low - CVSS Score 0.1 - 3.9
# * Medium - CVSS Score 4.0 - 6.9
# * High - CVSS Score 7.0 - 8.9
# * Critical - CVSS Score 9.0 - 10.0
#severity-threshold =

# This section is considered when running `cargo deny check licenses`
# More documentation for the licenses section can be found here:
# https://embarkstudios.github.io/cargo-deny/checks/licenses/cfg.html
[licenses]
version = 2
# List of explictly allowed licenses
# See https://spdx.org/licenses/ for list of possible licenses
# [possible values: any SPDX 3.11 short identifier (+ optional exception)].
allow = [
  "Apache-2.0",
  "BSD-2-Clause",
  "BSD-3-Clause",
  "CC0-1.0",
  "ISC",
  "MIT",
  "MPL-2.0",
  "OpenSSL",
  "Unicode-DFS-2016",
  "Zlib",
]
# The confidence threshold for detecting a license from license text.
# The higher the value, the more closely the license text must be to the
# canonical license text of a valid SPDX license file.
# [possible values: any between 0.0 and 1.0].
confidence-threshold = 0.8
# Allow 1 or more licenses on a per-crate basis, so that particular licenses
# aren't accepted for every possible crate as with the normal allow list
exceptions = [
  { allow = [
    "EUPL-1.2",
  ], name = "kustos-shared" },
  { allow = [
    "EUPL-1.2",
  ], name = "lapin-pool" },
  { allow = [
    "EUPL-1.2",
  ], name = "opentalk-cache" },
  { allow = [
    "EUPL-1.2",
  ], name = "opentalk-client-shared" },
  { allow = [
    "EUPL-1.2",
  ], name = "opentalk-controller-settings" },
  { allow = [
    "EUPL-1.2",
  ], name = "opentalk-database" },
  { allow = [
    "EUPL-1.2",
  ], name = "opentalk-diesel-newtype" },
  { allow = [
    "EUPL-1.2",
  ], name = "opentalk-diesel-newtype-impl" },
  { allow = [
    "EUPL-1.2",
  ], name = "opentalk-etherpad-client" },
  { allow = [
    "EUPL-1.2",
  ], name = "opentalk-janus-client" },
  { allow = [
    "EUPL-1.2",
  ], name = "opentalk-keycloak-admin" },
  { allow = [
    "EUPL-1.2",
  ], name = "opentalk-kustos-prefix" },
  { allow = [
    "EUPL-1.2",
  ], name = "opentalk-kustos-prefix-impl" },
  { allow = [
    "EUPL-1.2",
  ], name = "opentalk-mail-worker-protocol" },
  { allow = [
    "EUPL-1.2",
  ], name = "opentalk-nextcloud-client" },
  { allow = [
    "EUPL-1.2",
  ], name = "opentalk-proc-macro-fields-helper" },
  { allow = [
    "EUPL-1.2",
  ], name = "opentalk-types" },
]

# Some crates don't have (easily) machine readable licensing information,
# adding a clarification entry for it allows you to manually specify the
# licensing information
#[[licenses.clarify]]
# The name of the crate the clarification applies to
#name = "ring"
# The optional version constraint for the crate
#version = "*"
# The SPDX expression for the license requirements of the crate
#expression = "MIT AND ISC AND OpenSSL"
# One or more files in the crate's source used as the "source of truth" for
# the license expression. If the contents match, the clarification will be used
# when running the license check, otherwise the clarification will be ignored
# and the crate will be checked normally, which may produce warnings or errors
# depending on the rest of your configuration
#license-files = [
# Each entry is a crate relative path, and the (opaque) hash of its contents
#{ path = "LICENSE", hash = 0xbd0eed23 }
#]

[[licenses.clarify]]
expression = "MIT AND ISC AND OpenSSL"
license-files = [{ path = "LICENSE", hash = 0xbd0eed23 }]
name = "ring"
version = "*"

[licenses.private]
# If true, ignores workspace crates that aren't published, or are only
# published to private registries
ignore = true
# One or more private registries that you might publish crates to, if a crate
# is only published to private registries, and ignore is true, the crate will
# not have its license(s) checked
registries = []

# This section is considered when running `cargo deny check bans`.
# More documentation about the 'bans' section can be found here:
# https://embarkstudios.github.io/cargo-deny/checks/bans/cfg.html
[bans]
# Lint level for when multiple versions of the same crate are detected
multiple-versions = "deny"
# Lint level for when a crate version requirement is `*`
wildcards = "allow"
# The graph highlighting used when creating dotgraphs for crates
# with multiple versions
# * lowest-version - The path to the lowest versioned duplicate is highlighted
# * simplest-path - The path to the version with the fewest edges is highlighted
# * all - Both lowest-version and simplest-path are used
highlight = "all"
# List of crates that are allowed. Use with care!
allow = []
# List of crates to deny
deny = []
# Certain crates/versions that will be skipped when doing duplicate detection.
skip = [
  { name = "ahash", version = "=0.7" },
  { name = "async-io", version = "=1" },
  { name = "async-lock", version = "=2" },
  { name = "base16ct", version = "=0.1" },
  { name = "base64", version = "=0.13" },
  { name = "base64", version = "=0.21" },
  { name = "chrono-tz", version = "=0.8" },
  { name = "chrono-tz-build", version = "=0.2" },
  { name = "cookie", version = "=0.16" },
  { name = "crypto-bigint", version = "=0.4" },
  { name = "der", version = "=0.6" },
  { name = "ecdsa", version = "=0.14" },
  { name = "elliptic-curve", version = "=0.12" },
  { name = "event-listener", version = "=2" },
  { name = "event-listener", version = "=4" },
  { name = "event-listener-strategy", version = "=0.4" },
  { name = "fastrand", version = "1" },
  { name = "ff", version = "=0.12" },
  { name = "futures-lite", version = "=1" },
  { name = "group", version = "=0.12" },
  { name = "h2", version = "0.3" },
  { name = "hashbrown", version = "=0.11" },
  { name = "hashbrown", version = "=0.12" },
  { name = "heck", version = "=0.4" },
  { name = "http", version = "=0.2" },
  { name = "http-body", version = "=0.4" },
  { name = "hyper", version = "0.14" },
  { name = "hyper-rustls", version = "0.24" },
  { name = "idna", version = "=0.3" },
  { name = "indexmap", version = "=1" },
  { name = "itertools", version = "=0.10" },
  { name = "num-bigint", version = "=0.4" },
  { name = "ordered-float", version = "=2.10" },
  { name = "p256", version = "=0.11" },
  { name = "pkcs8", version = "=0.9" },
  { name = "polling", version = "=2" },
  { name = "regex-automata", version = "=0.1" },
  { name = "regex-syntax", version = "=0.6" },
  { name = "reqwest", version = "=0.11" },
  { name = "rfc6979", version = "=0.3" },
  { name = "rustls", version = "=0.21" },
  { name = "rustls-native-certs", version = "=0.6" },
  { name = "rustls-pemfile", version = "=1.0" },
  { name = "rustls-webpki", version = "=0.101" },
  { name = "sec1", version = "=0.3" },
  { name = "signature", version = "=1.6" },
  { name = "siphasher", version = "=0.3" },
  { name = "socket2", version = "=0.4" },
  { name = "spin", version = "=0.5" },
  { name = "spki", version = "=0.6" },
  { name = "strsim", version = "=0.10" },
  { name = "syn", version = "=1" },
  { name = "tokio-rustls", version = "=0.24" },
  { name = "toml_edit", version = "=0.21" },
  { name = "winnow", version = "=0.5" },
]
# Similarly to `skip` allows you to skip certain crates during duplicate
# detection. Unlike skip, it also includes the entire tree of transitive
# dependencies starting at the specified crate, up to a certain depth, which is
# by default infinite
skip-tree = [{ name = "rustix", version = "=0.37" }]

# This section is considered when running `cargo deny check sources`.
# More documentation about the 'sources' section can be found here:
# https://embarkstudios.github.io/cargo-deny/checks/sources/cfg.html
[sources]
# Lint level for what to happen when a crate from a crate registry that is not
# in the allow list is encountered
unknown-registry = "warn"
# Lint level for what to happen when a crate from a git repository that is not
# in the allow list is encountered
unknown-git = "warn"
# List of URLs for allowed crate registries. Defaults to the crates.io index
# if not specified. If it is specified but empty, no registries are allowed.
allow-registry = ["https://github.com/rust-lang/crates.io-index"]
# List of URLs for allowed Git repositories
allow-git = []

[sources.allow-org]
# 1 or more github.com organizations to allow git sources for
github = ["kbalt"]
# 1 or more gitlab.com organizations to allow git sources for
gitlab = []
# 1 or more bitbucket.org organizations to allow git sources for
bitbucket = []
