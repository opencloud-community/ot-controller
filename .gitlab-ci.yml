image: "rust:latest"

stages:
  - lint
  - test
  - build

variables:
  CARGO_HOME: "${CI_PROJECT_DIR}/.cargo"
  # Enable one network per build for the test container and services
  FF_NETWORK_PER_BUILD: "true"

cache:
  key: $CI_JOB_STAGE
  paths:
    - .cargo/
    - target/

lint:fmt:
  stage: lint
  before_script:
    - rustup component add rustfmt
  script:
    - cargo fmt -- --check

lint:clippy:
  stage: lint
  before_script:
    - rustup component add clippy
  script: cargo clippy --all-features -- --deny warnings

lint:dependency_check:
  stage: lint
  before_script:
    - cargo install --locked cargo-deny
  script: cargo deny check

test:cargo_check:
  stage: test
  variables:
    RUSTFLAGS: "-D warnings"
  script: cargo check --tests --all-features

test:cargo_test:
  stage: test
  variables:
    # Set ENV vars for services
    POSTGRES_DB: k3k
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: "password123"
    POSTGRES_HOST_AUTH_METHOD: trust
    RABBITMQ_DEFAULT_USER: guest
    RABBITMQ_DEFAULT_PASS: guest
    RABBITMQ_HOST: 'rabbitmq'
    RABBITMQ_PORT: '5672'
    # Used for integration tests
    DATABASE_URL: "postgres://postgres:password123@postgres:5432/k3k"
    AMQP_ADDR: 'amqp://guest:guest@rabbitmq:5672'
  services:
    - name: postgres:13-alpine
      alias: postgres
    - name: rabbitmq:3
      alias: rabbitmq
    - name: quay.io/freswa/janus-gateway-rmq:latest
      alias: janus-gateway
  before_script:
    - rustup component add rustfmt
    - cargo install diesel_cli --no-default-features --features="barrel-migrations,barrel/pg,postgres"
  script:
    - cargo test --workspace
    - ./.cargo/bin/diesel print-schema | /usr/local/cargo/bin/rustfmt | diff src/db/schema.rs -

build:release:
  stage: build
  artifacts:
    paths:
      - target/release/k3k-controller
  script:
    - cargo build --release
