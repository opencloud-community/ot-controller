---
image: rust:latest

stages:
  - lint
  - test
  - build

variables:
  CARGO_HOME: ${CI_PROJECT_DIR}/.cargo
  # Enable one network per build for the test container and services
  FF_NETWORK_PER_BUILD: 'true'

lint:fmt:
  stage: lint
  before_script:
    - rustup component add rustfmt
  script:
    - cargo fmt -- --check

lint:clippy:
  stage: lint
  before_script:
    - rustup component add clippy
  script: cargo clippy --all-features -- --deny warnings

lint:dependency_check:
  stage: lint
  before_script:
    - cargo install --locked cargo-deny
  script: cargo deny check

lint:yaml:
  stage: lint
  image: archlinux:latest
  before_script:
    - pacman -Syy --noconfirm yamllint
  script: yamllint .

test:cargo_check:
  stage: test
  variables:
    RUSTFLAGS: -D warnings
  script: cargo check --tests --all-features

test:cargo_test:
  stage: test
  variables:
    # Set ENV vars for services
    POSTGRES_DB: k3k
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: password123
    POSTGRES_HOST_AUTH_METHOD: trust
    RABBITMQ_DEFAULT_USER: guest
    RABBITMQ_DEFAULT_PASS: guest
    RABBITMQ_HOST: rabbitmq
    RABBITMQ_PORT: '5672'
    JANUS_EXCHANGE_TYPE: topic
    # Used for integration tests
    DATABASE_URL: postgres://postgres:password123@postgres:5432/k3k
    AMQP_ADDR: amqp://guest:guest@rabbitmq:5672
    REDIS_ADDR: redis://redis:6379/
  services:
    - name: postgres:13-alpine
      alias: postgres
    - name: rabbitmq:3.8
      alias: rabbitmq
    - name: quay.io/freswa/janus-gateway-rmq:latest
      alias: janus-gateway
    - name: redis:6-alpine
      alias: redis
  before_script:
    - rustup component add rustfmt
    - cargo install diesel_cli --no-default-features --features="barrel-migrations,barrel/pg,postgres"
  script:
    - cargo test --workspace
    - ./.cargo/bin/diesel print-schema | /usr/local/cargo/bin/rustfmt | diff crates/controller/src/db/schema.rs -

build:container:
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
    - if: $CI_COMMIT_TAG != null
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: ['']
  script:
    - mkdir -p /kaniko/.docker
    - >
      echo
      "{\"auths\":{\"$CI_REGISTRY\":{\"auth\":\"$(echo -n ${CI_REGISTRY_USER}:${CI_REGISTRY_PASSWORD} | base64)\"}}}" >
      /kaniko/.docker/config.json
    - >
      /kaniko/executor
      --context $CI_PROJECT_DIR
      --dockerfile $CI_PROJECT_DIR/ci/Dockerfile
      --cache=true
      --cache-ttl=730h
      --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
      --force
