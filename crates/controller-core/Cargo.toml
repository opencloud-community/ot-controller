# SPDX-FileCopyrightText: OpenTalk GmbH <mail@opentalk.eu>
#
# SPDX-License-Identifier: EUPL-1.2

[package]
name = "opentalk-controller-core"
edition = "2021"
license = "EUPL-1.2"
authors.workspace = true
version.workspace = true
publish = false
build = "build.rs"

[dependencies]
opentalk-controller-utils.workspace = true
opentalk-controller-settings.workspace = true
opentalk-database.workspace = true
opentalk-db-storage.workspace = true
opentalk-janus-media.workspace = true
opentalk-jobs.workspace = true
opentalk-mail-worker-protocol = { workspace = true, features = [ "client" ] }
opentalk-nextcloud-client = { workspace = true, default-features = false, features = [
    "rustls-tls-native-roots",
] }
opentalk-signaling-core.workspace = true
opentalk-types = { workspace = true, features = ["backend", "clap"] }

### Logging utilities
anstream.workspace = true
owo-colors.workspace = true
log = { workspace = true, features = ["serde"] }
tracing.workspace = true
tracing-futures = "0.2"
tracing-subscriber = { version = "0.3", features = [
    "parking_lot",
    "env-filter",
] }
tracing-opentelemetry.workspace = true
opentelemetry = { workspace = true, features = [
    "trace",
    "metrics",
] }
opentelemetry-otlp = "0.15"
opentelemetry-prometheus = "0.15"
opentelemetry_sdk = { version = "0.22", features = ["rt-tokio-current-thread", "metrics"] }
prometheus = "0.13"
tracing-actix-web = { version = "0.7" }

### Config
serde.workspace = true
clap.workspace = true
arc-swap.workspace = true

### Error handling
anyhow.workspace = true
thiserror.workspace = true
validator.workspace = true

### Database ORM
diesel-async.workspace = true
uuid = { workspace = true, features = ["serde", "v4"] }
opentalk-cache.workspace = true

### Web Framework & Runtime
tokio = { workspace = true, features = ["signal"] }
tokio-stream.workspace = true
actix-web = { workspace = true, features = ["rustls-0_21"] }
actix-rt.workspace = true
actix-web-httpauth.workspace = true
actix-cors = "0.7"
async-trait.workspace = true
futures.workspace = true
bytes.workspace = true
serde_json.workspace = true
mime = "0.3"
bytestring = { workspace = true, features = ["serde"] }

### RabbitMQ
lapin-pool.workspace = true

### Redis
redis = { workspace = true, features = ["tokio-comp", "connection-manager"] }
url.workspace = true
opentalk-r3dlock.workspace = true

### OpenID Connect & JWT
openidconnect.workspace = true
reqwest = { workspace = true, features = [
    "rustls-tls-native-roots",
] }
jsonwebtoken = "9.2"
base64.workspace = true
chrono.workspace = true
chrono-tz = { workspace = true, features = ["serde"] }

### Websockets
actix = "0.13"
actix-http = { version = "3", features = ["rustls-0_21"] }
actix-web-actors = "4.3"

### Rust Encryption
ring = "0.17"
rustls = "0.22"
rustls-pemfile = "1.0"
md5.workspace = true

### QoL/Util
either.workspace = true
itertools.workspace = true
phonenumber.workspace = true
email_address = "0.2.4"
redis-args.workspace = true

# Random Distributions etc. Used for RR
rand.workspace = true

### Reload controller process
sysinfo = { version = "0.30", default-features = false }
nix = { version = "0.27", features = ["signal"] }

### Access Control
kustos.workspace = true
opentalk-keycloak-admin.workspace = true

rrule = "0.11"

### CLI
tabled = "0.15"

[dev-dependencies]
opentalk-test-util = { workspace = true, features = ["database"] }
pretty_assertions.workspace = true

[build-dependencies]
anyhow.workspace = true
vergen = { version = "8", features = [
    "build",
    "cargo",
    "rustc",
    "git",
    "git2",
] }

[package.metadata.cargo-machete]
ignored = [
  # is used during build
  "vergen",
]
