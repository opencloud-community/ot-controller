// SPDX-FileCopyrightText: OpenTalk GmbH <mail@opentalk.eu>
//
// SPDX-License-Identifier: EUPL-1.2

use derive_more::{AsRef, Display, From, Into};

use crate::core::ParticipantId;

#[allow(unused_imports)]
use crate::imports::*;

/// A recording id generated by the recording service
///
/// Is used for subsequent requests to a specific recording session
// TODO(kbalt): currently hacky workaround using the participant id as recording id
#[derive(AsRef, Display, From, Into, Debug, Clone, Copy, PartialEq, Eq, Hash)]
#[cfg_attr(feature = "serde", derive(Serialize, Deserialize))]
pub struct RecordingId(ParticipantId);
