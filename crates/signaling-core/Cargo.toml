# SPDX-FileCopyrightText: OpenTalk GmbH <mail@opentalk.eu>
#
# SPDX-License-Identifier: EUPL-1.2

[package]
authors.workspace = true
edition = "2021"
license = "EUPL-1.2"
name = "opentalk-signaling-core"
publish = false
version.workspace = true

[lints]
workspace = true

[dependencies]
actix-http.workspace = true
actix-rt = { workspace = true, optional = true }
async-trait.workspace = true
aws-sdk-s3.workspace = true
bigdecimal.workspace = true
bytes.workspace = true
bytestring.workspace = true
config.workspace = true
derive_more = { workspace = true, features = [
  "as_ref",
  "display",
  "from",
  "from_str",
  "into",
] }
either.workspace = true
futures.workspace = true
kustos.workspace = true
lapin.workspace = true
lapin-pool.workspace = true
log.workspace = true
opentalk-controller-settings.workspace = true
opentalk-database.workspace = true
opentalk-db-storage.workspace = true
opentalk-etherpad-client.workspace = true
opentalk-r3dlock.workspace = true
opentalk-types = { workspace = true, features = ["backend"] }
opentalk-types-common = { workspace = true, features = ["backend"] }
opentalk-types-signaling = { workspace = true, features = ["backend"] }
opentalk-types-signaling-control = { workspace = true, features = ["backend"] }
opentelemetry = { workspace = true, features = ["metrics", "trace"] }
parking_lot.workspace = true
redis = { workspace = true, features = ["connection-manager", "tokio-comp"] }
redis-args.workspace = true
reqwest.workspace = true
reqwest11.workspace = true
rustc-hash.workspace = true
serde = { workspace = true, features = ["derive"] }
serde_json.workspace = true
slotmap = "1"
snafu.workspace = true
tokio.workspace = true
tokio-stream.workspace = true
tracing.workspace = true
tracing-actix-web = "0.7.10"
url.workspace = true
uuid = { workspace = true, features = ["v4"] }

[dev-dependencies]
chrono.workspace = true
pretty_assertions.workspace = true
serial_test.workspace = true

[features]
default = []
mocking = []
module_tester = ["actix-rt"]
