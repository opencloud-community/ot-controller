# SPDX-FileCopyrightText: OpenTalk GmbH <mail@opentalk.eu>
#
# SPDX-License-Identifier: EUPL-1.2

[package]
name = "janus-client"
version = "0.2.0"
edition = "2021"
license = "EUPL-1.2"
authors.workspace = true
publish = false

[dependencies]
# RabbitMQ
lapin.workspace = true
# Websockets
tokio-tungstenite = { version = "0.20", features = ["rustls-tls-native-roots"] }

# Random Generators
rand = { workspace = true, features = ["std", "std_rng"] }
# We use the std Futures and FutureExt from future-util which are both bundled in this crate
futures.workspace = true
# We currently only support tokio as the runtime
tokio = { workspace = true, features = ["sync", "rt"] }
# Used as an alternative to the std sync primitves
parking_lot.workspace = true
# Used to serialize from and to JSON
serde.workspace = true
serde_json.workspace = true
serde_repr.workspace = true

# Error handling
thiserror.workspace = true
# Reduce clutter arround docs/error strings
displaydoc.workspace = true
# Logging
tracing.workspace = true
log.workspace = true

[dev-dependencies]
pretty_assertions.workspace = true

# Test runtime
tokio-test = "0.4"
# Used to get log output in integration tests if needed
test-log = "0.2"
env_logger.workspace = true

# Enabling macros for tests
tokio = { workspace = true, features = ["sync", "rt", "macros"] }


[features]
default = ["videoroom", "echotest"]
videoroom = []
echotest = []

[package.metadata.cargo-machete]
ignored = [
  # is used in doctests
  "tokio_test",
  # is required by #[tokio::test] macro
  "env_logger",
]
