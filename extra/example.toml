[logging]
# Available levels (ERROR, WARN, INFO, DEBUG, TRACE)
#level = "WARN"

# Specifiy a path for a log file.
#file = "/var/log/k3k-controller.log"

[database]
# Database server address.
server = "localhost"

# Database server port.
port = 5432

# Database name.
name = "migration_test"

# Maximum number of connections allowed to the server.
# Defaults to 100 which is the default of postgres.
#max_connections = 100

# Minimum number of connections that are at least open.
# If load increases the controller will open new connection, at most max_connections many.
# Defaults to 10
#min_idle_connections = 10

# Database user.
user = "postgres"

# Database user password.
password = "password123"


[http]
# The port to bind the HTTP Server to (defaults to 80).
port = 8000
# URLs that requests are allowed from. Leave empty to allow all.
cors.allowed_origin = ["https://localhost:8080"]

[oidc.provider]
# OIDC Issuer URL according to RFC8414.
issuer = "http://localhost:8080/auth/realms/K3K"

# OIDC Client ID.
client_id = "Controller"

# OIDC Client secret (application requires confidential client).
client_secret = "c64c5854-3f02-4728-a617-bbe98ec42b8f"

[room_server]
# Maximum bitrate allowed for media sessions that will be used to transmit webcam video/audio
# Example: 64kB/s
max_video_bitrate = "64000"

# Maximum bitrate allowed for media sessions used for screen share
# Example: 1MB/s
max_screen_bitrate = "8000000"

# Connection settings for the channel used to talk to the room server.
# Currently these should be equal to the settings in janus.transport.rabbitmq.jcfg
# of the respective janus instance.
[[room_server.connections]]
to_janus_routing_key = "to-janus-1"
janus_exchange = "janus-exchange"
from_janus_routing_key = "from-janus-1"

[[room_server.connections]]
to_janus_routing_key = "to-janus-2"
janus_exchange = "janus-exchange"
from_janus_routing_key = "from-janus-2"

[rabbit_mq]
# The URL to use to connect to the rabbit mq broker
#url = "amqp://username:password@host/%2F"

[redis]
# Redis URL used to connect the redis server
#url = "redis://localhost:6379/"

#[turn]
# Lifetime of the generated credentials (in seconds)
#lifetime = 86400

#[[turn.servers]]
# URIS of this Turn Server following rfc7065
#uris = [
#    "turn:127.0.0.1:3478?transport=udp",
#    "turn:127.0.0.1:3478?transport=tcp",
#    "turns:127.0.0.1:5349?transport=tcp"
#]
# The Pre Shared Key set with --static-auth-secret=...
#pre_shared_key = "k3k2"

#[stun]
#uris = ["stun:127.0.0.1:3478"]
